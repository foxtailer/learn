"""
Ввести натуральное число N и вывести, сколько ∃ различных пар натуральных чисел A и B: A³+B³=N 
(с точностью до перестановки). <!> Вещественные операции (например, кубический корень) рекомендуется 
использовать как можно реже.

87539319
87539319 — это 167³+436³, 228³+423³ и 255³+414³.

3

Подсказка 1. Ни A, ни B не могут быть больше кубического корня из N. Вот тут вещественной операцией 
можно и воспользоваться.

Подсказка 2. Далеко не все пары A, B, имеет смысл проверять. Достаточно эффективно применить линейное 
программирование.

Спойлер:

Начнём с A=1, B=N**⅓. Если A³+B³ > N, будем уменьшать B на 1, в противном случае — увеличивать A на 1. 
Если равны, посчитаем это разложение. Как только A станет больше B, подсчёт закончим.
"""


# Origin
from math import ceil

def fu(N):
    #N = int(input('Enter number: '))
    B = ceil(N ** (1 / 3))
    A = 1
    count_pairs = 0

    while A <= B:
        if A ** 3 + B ** 3 > N:
            B -= 1
        elif A ** 3 + B ** 3 < N:
            A += 1
        else:
            A += 1
            B -= 1
          
            count_pairs += 1
    return count_pairs


print(fu(3**3 + 3**3))  # 1
print(fu(3**3 + 4**3))  # 1
print(fu(4**3 + 4**3))  # 1
print(fu(87539319))  # 3
print(fu(3))  # 0